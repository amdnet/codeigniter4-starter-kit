/*!
 * CirebonWeb (https://cirebonweb.com)
 * Copyright (c) 2023 CirebonWeb
 * Licensed under MIT (https://opensource.org/licenses/MIT)
 */

const $tabelData = $('#tabel-data');
const $modalDiv = $('#modal-div');
const $formData = $('#form-data');

let formCek = FormHelper.cekFormData($formData);

let baseUrl = window.location.href;
window.Lokasi = {
    urlTabel: `${baseUrl}/tabel`,
    urlGetId: `${baseUrl}/get-id`,
    urlSimpan: `${baseUrl}/simpan`,
    urlUpdate: `${baseUrl}/update`
};

$modalDiv.on('shown.bs.modal', () => { formCek.resetInitial(); });
$modalDiv.on('hidden.bs.modal', () => { resetFormValidation(this); });

// Load statistik
const $statContainer = $('.stat-container');
$(document).ready(function() {
  $statContainer.HelperStatBox({ endpoint: '/admin/statistik/user-list' });
});

// Data tabel
TabelHelper.tabelDinamis($tabelData, Lokasi.urlTabel, [
    { text: 'Add', action: () => { onclick = simpan(); } },
    {
        extend: 'excelHtml5',
        text: 'Excel',
        exportOptions: {
            columns: ':visible:not(:eq(8))',
            format: {
                body: function (data, row, column, node) {
                    // Bersihkan HTML saat export
                    return $('<div>').html(data).text().trim();
                }
            }
        }
    }
], [
    { targets: 0, width: '5%' },
    { targets: [0, 3, 4, 5, 6, 7, 8], className: 'dt-body-center' },
    { targets: '_all', className: 'dt-head-center' },
    { targets: [2, 5, 6, 7, 8], orderable: false },
    { targets: [0, 5, 6, 7, 8], searchable: false },
    { targets: [5, 6, 7], render: TabelHelper.tabelTanggalWaktu }
], [[0, 'asc']], {
    initComplete: function () {
        let api = this.api();
        let filterContainer = $('#tabel-data_filter');
        let extraFilters = $('<div class="ml-2 d-inline-block"></div>');

        api.columns([3, 4]).every(function () {
            let column = this;
            let headerText = $(column.header()).text().trim();
            let select = $('<select class="form-control form-control-sm d-inline-block w-auto mr-1"><option value="">Semua ' + headerText + '</option></select>')
                .appendTo(extraFilters)
                .on('change', function () {
                    let val = $.fn.dataTable.util.escapeRegex($(this).val());
                    column.search(val ? '^' + val + '$' : '', true, false).draw();
                });

            column.data().unique().sort().each(function (d) {
                // Bersihkan HTML sebelum dimasukkan ke dropdown
                let text = $('<div>').html(d).text().trim();
                select.append('<option value="' + text + '">' + text + '</option>');
            });
        });
        filterContainer.append(extraFilters);

        api.on('xhr.dt', function () { 
            $statContainer.HelperStatBox('refresh');
        });
    }
});

// Fungsi untuk cek password visibility
function cekpwd() {
    if ($(".passwd").get(0).type === "password") {
        $(".ikon").html("<i class='bi bi-eye-slash'></i>");
        $("#password, #password_confirm").each(function () {
            this.type = "text";
        });
    } else {
        $(".ikon").html("<i class='bi bi-eye'></i>");
        $("#password, #password_confirm").each(function () {
            this.type = "password";
        });
    }
}

// Fungsi untuk menyimpan data user atau email
function simpan(userId) {
    let $modalTitle = $('.modal-title');
    let $btnSubmit = $('#btn-submit');
    let $btnLoading = $('#btn-loading');
    let $btnClose = $('#btn-close');

    $btnLoading.hide();
    $formData[0].reset();

    if (!userId || userId < 1) {
        // Mode tambah
        urlController = Lokasi.urlSimpan;
        submitText = 'Simpan';
        $modalTitle.text('Tambah User');
        $btnSubmit.text(submitText);
        $modalDiv.modal('show');
    } else {
        // Mode edit
        $.ajax({
            url: Lokasi.urlGetId,
            type: 'POST',
            data: { userId: userId },
            dataType: 'json',
            success: function (response) {
                if (response) {
                    urlController = Lokasi.urlUpdate;
                    submitText = 'Update';
                    $modalTitle.text('Edit User');
                    $btnSubmit.text(submitText);
                    
                    // Isi form
                    $formData.find('#iduser').val(response.iduser);
                    $formData.find('#username').val(response.username);
                    $formData.find('#email').val(response.email);
                    $formData.find('#aktivasi').val(response.active);
                    $formData.find('#akses').val(response.group);
                    $formData.find('#idprofil').val(response.idprofil);
                    $formData.find('#perusahaan').val(response.perusahaan);
                    $formData.find('#whatsapp').val(response.wa);
                    $formData.find('#telegram').val(response.telegram);
                    $formData.find('#alamat').val(response.alamat);
                    
                    $modalDiv.modal('show');
                } else {
                    Swal.fire('Error', 'Data user tidak ditemukan.', 'error');
                }
            },
            error: function (jqXHR, textStatus) {
                Swal.fire('Error', 'Akses data user gagal: ' + textStatus, 'error');
            }
        });
    }

    // Validasi + submit
    $formData.validate(
        $.extend(FormHelper.validasiForm(), {
            ignore: [],
            rules: {
                username: { required: true, minlength: 3, maxlength: 30 },
                email: { required: true, customEmail: true },
                password: { required: false, minlength: 8 },
                password_confirm: { required: false, equalTo: '#password' },
                perusahaan: { required: false, minlength: 5, maxlength: 30 },
                whatsapp: { required: false, number: true, minlength: 8, maxlength: 15 },
                telegram: { required: false, number: true, minlength: 8, maxlength: 15 },
                alamat: { required: false, minlength: 10, maxlength: 100 }
            },
            submitHandler: (form) => {
                if (!formCek.isChanged()) return false;
                return FormHelper.submitForm(form, urlController, $btnSubmit, $btnLoading, {$tabelData, $modalDiv,  $btnClose});
            }
        })
    );
}