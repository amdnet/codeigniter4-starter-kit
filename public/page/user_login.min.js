/*!
 * CirebonWeb (https://cirebonweb.com)
 * Copyright (c) 2023 CirebonWeb
 * Licensed under MIT (https://opensource.org/licenses/MIT)
 */

let baseUrl = window.location.href;
window.Lokasi = {
    urlTabel: `${baseUrl}/tabel`,
    urlHapus: `${baseUrl}/hapus`,
    urlReset: `${baseUrl}/reset`
};

const $tabelData = $('#tabel-data');
const $statContainer = $('.stat-container');

// Load statistik
$(document).ready(function () {
    $statContainer.HelperStatBox({ endpoint: '/admin/statistik/user-login' });
});

// load dataTable
TabelHelper.tabelDinamis($tabelData, Lokasi.urlTabel, [
    { text: 'Hapus', action: () => { onclick = hapus(); } },
    { text: 'Reset', attr: { id: 'btn-reset' } },
    {
        extend: 'excelHtml5', text: 'Excel',
        exportOptions: { columns: ':visible:not(:eq(1))' }
        // exportOptions: { columns: ':visible:not(:eq(1)):not(:eq(8))' }
    }
], [
    { targets: 0, width: '5%' },
    { targets: [1, 3, 4, 7, 8], className: 'dt-body-center' },
    { targets: '_all', className: 'dt-head-center' },
    { targets: [1, 3, 6, 7], orderable: false },
    { targets: [0, 1, 3, 7, 9, 10, 11, 12], searchable: false },
    { targets: [3], render: TabelHelper.tabelTanggalWaktu }
], [[0, 'desc']], {
    initComplete: function () {
        let api = this.api();
        let filterContainer = $('#tabel-data_filter');
        let extraFilters = $('<div class="ml-2 d-inline-block"></div>');

        api.columns([2, 8]).every(function () {
            let column = this;
            let headerText = $(column.header()).text().trim();
            let select = $('<select class="form-control form-control-sm d-inline-block w-auto mr-1"><option value="">Semua ' + headerText + '</option></select>')
                .appendTo(extraFilters)
                .on('change', function () {
                    let val = $.fn.dataTable.util.escapeRegex($(this).val());
                    column.search(val ? '^' + val + '$' : '', true, false).draw();
                });

            column.data().unique().sort().each(function (d) {
                select.append('<option value="' + d + '">' + d + '</option>');
            });
        });
        filterContainer.append(extraFilters);

        api.on('xhr.dt', function () {
            $statContainer.HelperStatBox('refresh');
        })
    }
});

$('#checkAll').on('click', function () {
    $('.checkItem').prop('checked', this.checked);
});

/**
 * Fungsi untuk menangani penghapusan data yang dipilih dari tabel.
 * Batalkan aksi jika dataTables kosong.
 * @returns {void}
 */
function hapus() {
    // Ambil semua checkbox yang tercentang
    let selected = $('.checkItem:checked');
    let rowCount = $tabelData.DataTable().data().count();

    // Validasi tidak ada yang terpilih
    if (selected.length === 0) {
        Swal.fire('Peringatan', 'Silakan pilih minimal satu data untuk dihapus.', 'warning');
        return;
    }

    // Validasi tabel kosong
    if (rowCount === 0) {
        Swal.fire('Informasi', 'Data tabel kosong, proses dihentikan.', 'info');
        return;
    }

    // Kalau ada yang terpilih, lanjut konfirmasi hapus
    Swal.fire({
        icon: 'question',
        title: 'Konfirmasi',
        html: langText.removeTitle + '<br>' + langText.removeText,
        showCancelButton: true,
        confirmButtonColor: '#d33',
    }).then((result) => {
        if (result.isConfirmed) {
            isGenerating = true;
            Beranda.progressBar.css('width', '0%').text('0 %');
            Beranda.progressModal.modal('show');

            // Simulasi progress animasi
            let progress = 0;
            const interval = setInterval(() => {
                if (progress < 90) {
                    progress += 1;
                    Beranda.progressBar.css('width', `${progress}%`).text(`${progress} %`);
                }
            }, 200);

            // Kirim ID terpilih ke server
            let ids = selected.map(function () { return $(this).val(); }).get();

            $.post(Lokasi.urlHapus, { ids: ids })
                .done(function (response) {
                    clearInterval(interval);
                    Beranda.progressBar.css('width', '100%').text('100 %');
                    setTimeout(() => {
                        Beranda.progressModal.modal('hide');
                        Swal.fire('Sukses', response.messages, 'success').then(() => {
                            let table = $tabelData.DataTable();

                            // Uncheck checkbox header
                            $('#checkAll').prop('checked', false);

                            // Reload data
                            table.ajax.reload(function () {
                                let info = table.page.info();
                                // Kalau halaman kosong dan bukan halaman pertama â†’ mundur 1 halaman
                                if (info.recordsDisplay > 0 && info.end - info.start === 0 && info.page > 0) {
                                    table.page(info.page - 1).draw(false);
                                }
                            }, false);
                        });
                    }, 500);
                })
                .fail(function (xhr) {
                    clearInterval(interval);
                    Beranda.progressModal.modal('hide');
                    let msg = xhr.responseJSON?.messages || 'Terjadi kesalahan saat proses.';
                    Swal.fire('Gagal', msg, 'error');
                });
        }
    });
}

/**
 * Reset dataTables.
 * Batalkan aksi jika dataTables kosong.
 */
$('#btn-reset').on('click', function () {
    let rowCount = $tabelData.DataTable().data().count();
    if (rowCount === 0) {
        Swal.fire('Informasi', 'Data tabel kosong, proses dihentikan.', 'info');
        return;
    }

    Beranda.aksiAjax(
        '#btn-reset',
        'Konfirmasi',
        langText.removeReset + '<br>' + langText.removeText,
        'question',
        Lokasi.urlReset,
        { useLoading: true, onSuccess: () => { $tabelData.DataTable().ajax.reload(null, false) } }
    );
});