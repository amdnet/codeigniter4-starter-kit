/*!
 * CirebonWeb (https://cirebonweb.com)
 * Copyright (c) 2023 CirebonWeb
 * Licensed under MIT (https://opensource.org/licenses/MIT)
 */

// var csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
// $.ajaxSetup({ headers: { 'X-CSRF-TOKEN': csrfToken } });

const Beranda = {
    refreshCsrf: function () {
        const token = document.querySelector('meta[name="csrf-token"]');
        if (token) {
            $.ajaxSetup({
                headers: {
                    'X-CSRF-TOKEN': token.getAttribute('content')
                }
            });
        }
    },

    progressModal: $('#progressModal'),
    progressBar: $('.progress-bar'),

    /**
     * Fungsi untuk menampilkan pesan sukses atau error menggunakan SweetAlert.
     *
     * @param {string} btn Selector tombol yang akan memicu aksi.
     * @param {string} judul Judul pesan SweetAlert.
     * @param {string} teks Isi pesan SweetAlert.
     * @param {string} icon Icon SweetAlert ('success', 'error', 'warning', 'info', 'question').
     * @param {string} url URL tujuan untuk AJAX request.
     * @param {object} [options] Opsi tambahan untuk konfigurasi fungsi.
     * @param {boolean} [options.useLoading=null] Menampilkan loading indicator.
     * @param {function} [options.onSuccess=null] Fungsi yang akan dijalankan setelah AJAX sukses.
     * @param {function} [options.onError=null] Fungsi yang akan dijalankan jika AJAX gagal.
     */
    aksiAjax: function (btn, judul, teks, icon, url, {
        useLoading = false,
        onSuccess = null,
        onError = null
    } = {}) {
        $(document).on('click', btn, function (e) {
            e.preventDefault();

            Swal.fire({
                title: judul,
                html: teks,
                icon: icon,
                showCancelButton: true,
                confirmButtonColor: '#d33',
                confirmButtonText: 'Submit'
            }).then((result) => {
                if (!result.isConfirmed) return;

                // fungsi privat untuk loading
                let timer = null;
                let startTime = null;

                function showLoading() {
                    Beranda.progressBar.css('width', '1%').text('0 %');
                    Beranda.progressModal.modal('show');
                    startTime = Date.now();

                    let progress = 1;
                    timer = setInterval(() => {
                        if (progress < 90) {
                            progress++;
                            Beranda.progressBar.css('width', progress + '%').text(progress + ' %');
                        }
                    }, 30);
                }

                function hideLoading() {
                    clearInterval(timer);
                    const elapsed = (Date.now() - startTime) / 1000;
                    const delay = elapsed < 0.5 ? (500 - elapsed * 1000) : 0;

                    Beranda.progressBar.css('width', '100%').text('100 %');
                    setTimeout(() => Beranda.progressModal.modal('hide'), delay + 200);
                }

                if (useLoading) showLoading();

                $.ajax({
                    url: url,
                    type: 'POST',
                    dataType: 'json',
                    success: function (res) {
                        if (useLoading) hideLoading();

                        if (res.success) {
                            Swal.fire('Berhasil', res.messages, 'success').then(() => {
                                Beranda.refreshCsrf();
                                if (typeof onSuccess === 'function') onSuccess(res);
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: res.messagess,
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    error: function (xhr) {
                        if (useLoading) hideLoading();

                        let msg =
                            xhr.responseJSON?.messages ||
                            xhr.responseText || 'Terjadi kesalahan saat proses.';
                        Swal.fire('Error', msg, 'error');

                        if (typeof onError === 'function') onError(xhr);
                    }
                });
            });
        });
    }
};