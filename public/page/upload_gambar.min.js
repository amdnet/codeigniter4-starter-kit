/*!
 * CirebonWeb (https://cirebonweb.com)
 * Copyright (c) 2023 CirebonWeb
 * Licensed under MIT (https://opensource.org/licenses/MIT)
 */

function uploadGambarSingle() {
  const input = document.querySelector('.unggah input[type="file"]');
  if (!input) return;

  const unggah = input.closest('.unggah');
  const spinner = unggah.querySelector('.loadingSpinner');
  const preview = unggah.querySelector(`#preview_${input.id}`);
  const info = unggah.querySelector(`#info_${input.id}`);

  input.addEventListener('change', function (e) {
    const file = e.target.files[0];
    if (!file || !file.type.match(/image.*/)) return;

    const reader = new FileReader();
    reader.onload = function (event) {
      const img = new Image();
      img.onload = function () {
        const maxWidth = unggah.dataset.maxWidth ? parseInt(unggah.dataset.maxWidth) : img.width;
        const quality = unggah.dataset.quality ? parseFloat(unggah.dataset.quality) : 0.9;
        const thresholdKB = unggah.dataset.threshold ? parseInt(unggah.dataset.threshold) : 100;

        if (file.size <= thresholdKB * 1024) {
          preview.src = URL.createObjectURL(file);
          info.innerHTML = `<small>Dimensi asli: ${img.width}x${img.height} px<br>Ukuran asli: ${(file.size / 1024).toFixed(1)} KB</small>`;
          return;
        }

        spinner.style.display = 'inline-block';

        setTimeout(() => {
          const canvas = document.createElement('canvas');
          const scale = Math.min(maxWidth / img.width, 1);
          canvas.width = img.width * scale;
          canvas.height = img.height * scale;

          pica().resize(img, canvas)
            .then(() => pica().toBlob(canvas, 'image/jpeg', quality))
            .then(blob => {
              spinner.style.display = 'none';
              preview.src = URL.createObjectURL(blob);

              const width = canvas.width;
              const height = canvas.height;
              const sizeKB = (blob.size / 1024).toFixed(1);
              info.innerHTML = `<small>Dimensi gambar: ${width}x${height} px<br>Ukuran setelah proses: ${sizeKB} KB</small>`;

              const newFile = new File([blob], file.name, { type: blob.type });
              const dt = new DataTransfer();
              dt.items.add(newFile);
              input.files = dt.files;
            });
        }, 500)
      };
      img.src = event.target.result;
    };
    reader.readAsDataURL(file);
  });
}

// Inisialisasi saat halaman siap
document.addEventListener('DOMContentLoaded', uploadGambarSingle);
