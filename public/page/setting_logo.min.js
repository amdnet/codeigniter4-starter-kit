/*!
 * CirebonWeb (https://cirebonweb.com)
 * Copyright (c) 2023 CirebonWeb
 * Licensed under MIT (https://opensource.org/licenses/MIT)
 */

document.querySelectorAll('input[type="file"]').forEach(input => {
    input.addEventListener('change', function (e) {
        const file = e.target.files[0];
        if (!file || !file.type.match(/image.*/)) return;

        const kotak = e.target.closest('.kotak');
        const spinner = kotak.querySelector('.loadingSpinner');
        const preview = kotak.querySelector('img');
        const info = kotak.querySelector('div[id$="Info"]');

        const reader = new FileReader();
        reader.onload = function (event) {
            const img = new Image();
            img.onload = function () {
                if (file.size <= 100 * 1024) {
                    preview.src = URL.createObjectURL(file);
                    info.innerHTML = `<small>Dimensi asli: ${img.width}x${img.height} px<br>Ukuran asli: ${(file.size / 1024).toFixed(1)} KB</small>`;
                    return;
                }

                spinner.style.display = 'inline-block';

                const canvas = document.createElement('canvas');
                const scale = Math.min(345 / img.width, 1);
                canvas.width = img.width * scale;
                canvas.height = img.height * scale;

                pica().resize(img, canvas)
                    .then(() => pica().toBlob(canvas, 'image/jpeg', 0.85))
                    .then(blob => {
                        spinner.style.display = 'none';
                        preview.src = URL.createObjectURL(blob);
                        info.innerHTML = `<small>Dimensi compres: ${canvas.width}x${canvas.height} px<br>Ukuran compres: ${(blob.size / 1024).toFixed(1)} KB</small>`;

                        const newFile = new File([blob], file.name, { type: blob.type });
                        const dt = new DataTransfer();
                        dt.items.add(newFile);
                        e.target.files = dt.files;
                    });
            };
            img.src = event.target.result;
        };
        reader.readAsDataURL(file);
    });
});

// untuk satu gambar
// const spinner = document.getElementById('loadingSpinner');

// document.getElementById('logo_warna').addEventListener('change', function (e) {
//     spinner.style.display = 'block'; // tampilkan saat mulai
//     const file = e.target.files[0];
//     const infoEl = document.getElementById('logoWarnaInfo');
//     const previewEl = document.getElementById('logoWarna');

//     if (!file || !file.type.match(/image.*/)) return;

//     const reader = new FileReader();
//     reader.onload = function (event) {
//         const img = new Image();
//         img.onload = function () {
//             const scale = Math.min(img.height / img.width, 1);
//             const canvas = document.createElement('canvas');
//             canvas.width = img.width * scale;
//             canvas.height = img.height * scale;

//             pica().resize(img, canvas)
//                 .then(() => {
//                     if (file.size > 100 * 1024) {
//                         return pica().toBlob(canvas, 'image/jpeg', 0.85);
//                     } else {
//                         return pica().toBlob(canvas, file.type);
//                     }
//                 })
//                 .then(blob => {
//                     spinner.style.display = 'none'; // sembunyikan setelah selesai
//                     previewEl.src = URL.createObjectURL(blob);

//                     // Ambil dimensi dari canvas
//                     const width = canvas.width;
//                     const height = canvas.height;
//                     const sizeKB = (blob.size / 1024).toFixed(1);

//                     infoEl.innerHTML = `<small>Dimensi gambar: ${width}x${height} px<br>Ukuran setelah proses: ${sizeKB} KB</small>`;

//                     // Ganti file input dengan blob hasil resize
//                     const newFile = new File([blob], file.name, { type: blob.type });
//                     const dataTransfer = new DataTransfer();
//                     dataTransfer.items.add(newFile);
//                     e.target.files = dataTransfer.files;
//                 });
//         };
//         img.src = event.target.result;
//     };
//     reader.readAsDataURL(file);
// });