/*!
 * CirebonWeb (https://cirebonweb.com)
 * Copyright (c) 2023 CirebonWeb
 * Licensed under MIT (https://opensource.org/licenses/MIT)
 */

let baseUrl = window.location.href;
    window.Lokasi = {
        sistemUrl: `${baseUrl}/simpan-sistem`,
        situsUrl: `${baseUrl}/simpan-situs`,
        smtpUrl: `${baseUrl}/simpan-smtp`,
        recaptchaUrl: `${baseUrl}/simpan-recaptcha`,
    };

let $sistemForm = $('#sistem-form'),
    $sistemSubmit = $('#sistem-submit'),
    $sistemLoading = $('#sistem-loading');

let $situsForm = $('#situs-form'),
    $situsSubmit = $('#situs-submit'),
    $situsLoading = $('#situs-loading');

let $smtpForm = $('#smtp-form'),
    $smtpSubmit = $('#smtp-submit'),
    $smtpLoading = $('#smtp-loading');

let $recaptchaForm = $('#recaptcha-form'),
    $recaptchaSubmit = $('#recaptcha-submit'),
    $recaptchaLoading = $('#recaptcha-loading');

$(function () {
    $('[data-toggle="tooltip"]').tooltip()
    $sistemLoading.hide();
    $situsLoading.hide();
    $smtpLoading.hide();
    $recaptchaLoading.hide();

    $('#smtpCrypto').on('change', function () {
        let val = $(this).val();
        let port = (val === 'ssl') ? 465 : 25;
        $('#smtpPort').val(port);
    });
});

function cekpwd() {
    let input = $("#smtpPass").get(0);
    if (input.type === "password") {
        $(".ikon").html("<i class='bi bi-eye-slash'></i>");
        input.type = "text";
    } else {
        $(".ikon").html("<i class='bi bi-eye'></i>");
        input.type = "password";
    }
}

// sistem
$(function () {
    let formCek = FormHelper.cekFormData($sistemForm);

    $sistemForm.validate($.extend(FormHelper.validasiForm(), {
        ignore: [],
        rules: {
            authRegistration: { required: true },
            authMagicLink: { required: true },
            authRemembering: { required: true },
            authRememberLength: { required: true, digits: true, minlength: 5, maxlength: 30 }
        },
        submitHandler: (form) => {
            $sistemForm.find(':input').removeClass('is-invalid is-valid');
            if (!formCek.isChanged()) return false;
            return FormHelper.submitForm(form, Lokasi.sistemUrl, $sistemSubmit, $sistemLoading, {formCek: formCek});
        }
    }));
});

// situs
$(function () {
    let formCek = FormHelper.cekFormData($situsForm);

    $situsForm.validate($.extend(FormHelper.validasiForm(), {
        ignore: [],
        rules: {
            siteNama: { required: true, minlength: 5, maxlength: 50 },
            siteTagline: { required: true, minlength: 5, maxlength: 50 },
            siteTelp: { required: true, digits: true, minlength: 5, maxlength: 50 },
            siteWa: { required: true, digits: true, minlength: 8, maxlength: 15 },
            siteTelegram: { required: true, digits: true, minlength: 8, maxlength: 15 },
            siteEmail: { required: true, customEmail: true },
            siteAlamat: { required: true, minlength: 10, maxlength: 255 },
        },
        submitHandler: (form) => {
            $situsForm.find(':input').removeClass('is-invalid is-valid');
            if (!formCek.isChanged()) return false;
            return FormHelper.submitForm(form, Lokasi.situsUrl, $situsSubmit, $situsLoading, {reload: true});
        }
    }));
});

// smtp
$(function () {
    let formCek = FormHelper.cekFormData($smtpForm);

    $smtpForm.validate($.extend(FormHelper.validasiForm(), {
        ignore: [],
        rules: {
            smtpEmail: { required: true, minlength: 10, maxlength: 100, customEmail: true },
            smtpNama: { required: true, minlength: 5, maxlength: 50 },
            smtpPenerima: { required: true, minlength: 10, maxlength: 100, customEmail: true },
            smtpHost: { required: true, minlength: 10, maxlength: 100 },
            smtpProtocol: { required: true },
            smtpCrypto: { required: false },
            smtpPort: { required: true, digits: true, minlength: 2, maxlength: 5 },
            smtpUser: { required: true, minlength: 10, maxlength: 100, customEmail: true },
            smtpPass: { required: false, minlength: 8 }
        },
        submitHandler: function (form) {
            $smtpForm.find(':input').removeClass('is-invalid is-valid');
            if (!formCek.isChanged()) return false;
            return FormHelper.submitForm(form, Lokasi.smtpUrl, $smtpSubmit, $smtpLoading, {formCek: formCek});
        }
    }));
});

// recaptcha
$(function () {
    let formCek = FormHelper.cekFormData($recaptchaForm);

    $recaptchaForm.validate($.extend(FormHelper.validasiForm(), {
        ignore: [],
        rules: {
            gRecaptcha: { required: true },
            gSiteKey: { required: true, minlength: 40, maxlength: 40 },
            gSecretKey: { required: true, minlength: 40, maxlength: 40 }
        },
        submitHandler: (form) => {
            $recaptchaForm.find(':input').removeClass('is-invalid is-valid');
            if (!formCek.isChanged()) return false;
            return FormHelper.submitForm(form, Lokasi.recaptchaUrl, $recaptchaSubmit, $recaptchaLoading, {formCek: formCek});
        }
    }));
});